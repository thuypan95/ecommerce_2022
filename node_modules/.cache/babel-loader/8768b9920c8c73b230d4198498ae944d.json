{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authApi from \"../api/auth\";\nexport const login = createAsyncThunk('auth/login', async (data, thunkAPI) => {\n  const {\n    email,\n    password\n  } = data; //muon dispatch 1 action khac: thunkAPI.dispatch(...)\n\n  const responseLogin = await authApi.loginApi(email, password);\n  return responseLogin;\n});\nexport const registration = createAsyncThunk('auth/registration', async (data, thunkAPI) => {\n  const {\n    email,\n    password\n  } = data;\n  const responseRegister = await authApi.registerApi(email, password);\n  return responseRegister;\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    token: '',\n    username: '',\n    isLogin: false,\n    loading: false,\n    id: ''\n  },\n  reducers: {\n    logout(state) {\n      state.token = '';\n      state.isLogin = false;\n      state.username = '';\n      state.id = '';\n    }\n\n  },\n  extraReducers: {\n    [login.pending]: state => {\n      state.loading = true;\n    },\n    [login.rejected]: state => {\n      state.loading = false;\n    },\n    [login.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.token = action.payload.token;\n      state.username = action.payload.username;\n      state.isLogin = action.payload.isLogin;\n      state.id = action.payload.id;\n    },\n    [registration.pending]: state => {\n      state.loading = true;\n    },\n    [registration.rejected]: state => {\n      state.loading = false;\n    },\n    [registration.fulfilled]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport const AuthActions = authSlice.actions;\nexport default authSlice;","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/redux/auth-slice.js"],"names":["createSlice","createAsyncThunk","authApi","login","data","thunkAPI","email","password","responseLogin","loginApi","registration","responseRegister","registerApi","authSlice","name","initialState","token","username","isLogin","loading","id","reducers","logout","state","extraReducers","pending","rejected","fulfilled","action","payload","AuthActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CAAC,YAAD,EAAe,OAAOG,IAAP,EAAaC,QAAb,KAA0B;AAC1E,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,IAA5B,CAD0E,CAE1E;;AACA,QAAMI,aAAa,GAAG,MAAMN,OAAO,CAACO,QAAR,CAAiBH,KAAjB,EAAwBC,QAAxB,CAA5B;AACA,SAAOC,aAAP;AACH,CALoC,CAA9B;AAMP,OAAO,MAAME,YAAY,GAAGT,gBAAgB,CAAC,mBAAD,EAAsB,OAAOG,IAAP,EAAaC,QAAb,KAA0B;AACxF,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,IAA5B;AACA,QAAMO,gBAAgB,GAAG,MAAMT,OAAO,CAACU,WAAR,CAAoBN,KAApB,EAA2BC,QAA3B,CAA/B;AACA,SAAOI,gBAAP;AACH,CAJ2C,CAArC;AAMP,MAAME,SAAS,GAAGb,WAAW,CAAC;AAC1Bc,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,OAAO,EAAE,KAHC;AAIVC,IAAAA,OAAO,EAAE,KAJC;AAKVC,IAAAA,EAAE,EAAE;AALM,GAFY;AAS1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACP,KAAN,GAAc,EAAd;AACAO,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACN,QAAN,GAAiB,EAAjB;AACAM,MAAAA,KAAK,CAACH,EAAN,GAAW,EAAX;AACH;;AANK,GATgB;AAiB1BI,EAAAA,aAAa,EAAE;AACX,KAACrB,KAAK,CAACsB,OAAP,GAAkBF,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAAChB,KAAK,CAACuB,QAAP,GAAmBH,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACH,KANU;AAOX,KAAChB,KAAK,CAACwB,SAAP,GAAmB,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AAClCL,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACP,KAAN,GAAcY,MAAM,CAACC,OAAP,CAAeb,KAA7B;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiBW,MAAM,CAACC,OAAP,CAAeZ,QAAhC;AACAM,MAAAA,KAAK,CAACL,OAAN,GAAgBU,MAAM,CAACC,OAAP,CAAeX,OAA/B;AACAK,MAAAA,KAAK,CAACH,EAAN,GAAWQ,MAAM,CAACC,OAAP,CAAeT,EAA1B;AACH,KAbU;AAcX,KAACV,YAAY,CAACe,OAAd,GAAyBF,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAhBU;AAiBX,KAACT,YAAY,CAACgB,QAAd,GAA0BH,KAAD,IAAW;AAChCA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACH,KAnBU;AAoBX,KAACT,YAAY,CAACiB,SAAd,GAA2BJ,KAAD,IAAW;AACjCA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACH;AAtBU;AAjBW,CAAD,CAA7B;AA0CA,OAAO,MAAMW,WAAW,GAAGjB,SAAS,CAACkB,OAA9B;AACP,eAAelB,SAAf","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authApi from \"../api/auth\";\nexport const login = createAsyncThunk('auth/login', async (data, thunkAPI) => {\n    const { email, password } = data;\n    //muon dispatch 1 action khac: thunkAPI.dispatch(...)\n    const responseLogin = await authApi.loginApi(email, password);\n    return responseLogin;\n})\nexport const registration = createAsyncThunk('auth/registration', async (data, thunkAPI) => {\n    const { email, password } = data;\n    const responseRegister = await authApi.registerApi(email, password);\n    return responseRegister;\n})\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        token: '',\n        username: '',\n        isLogin: false,\n        loading: false,\n        id: ''\n    },\n    reducers: {\n        logout(state) {\n            state.token = '';\n            state.isLogin = false;\n            state.username = '';\n            state.id = '';\n        }\n    },\n    extraReducers: {\n        [login.pending]: (state) => {\n            state.loading = true;\n        },\n        [login.rejected]: (state) => {\n            state.loading = false;\n        },\n        [login.fulfilled]: (state, action) => {\n            state.loading = false;\n            state.token = action.payload.token;\n            state.username = action.payload.username;\n            state.isLogin = action.payload.isLogin;\n            state.id = action.payload.id;\n        },\n        [registration.pending]: (state) => {\n            state.loading = true;\n        },\n        [registration.rejected]: (state) => {\n            state.loading = false;\n        },\n        [registration.fulfilled]: (state) => {\n            state.loading = false;\n        }\n    }\n});\nexport const AuthActions = authSlice.actions;\nexport default authSlice;"]},"metadata":{},"sourceType":"module"}