{"ast":null,"code":"var _jsxFileName = \"/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/Category/FilterByColors.js\",\n    _s = $RefreshSig$();\n\nimport { Check } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { productActions } from \"../../redux/product-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterByColors = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [checkedState, setCheckedState] = useState(new Array(props.listColors.length).fill(false));\n\n  const handleChangeInput = (target, position) => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    console.log(\"updatedCheckedState\", checkedState);\n    setCheckedState(updatedCheckedState);\n    dispatch(productActions.inputChangeColor(target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"font-semibold mb-4\",\n      children: \"Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: props.listColors.length > 0 && props.listColors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-2\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: color.name,\n            value: color.id,\n            onChange: event => handleChangeInput(event.target, index),\n            className: \"hidden\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-8 h-8 text-center rounded-full border\",\n            style: {\n              backgroundColor: `${color.color_code}`\n            },\n            children: checkedState[index] && /*#__PURE__*/_jsxDEV(Check, {\n              style: {\n                fill: \"green\"\n              },\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, color.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 57\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\n_s(FilterByColors, \"Z/l6g41P5ViKtKsAoSEy7fLp2m4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FilterByColors;\nexport default FilterByColors;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterByColors\");","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/Category/FilterByColors.js"],"names":["Check","useState","useDispatch","productActions","FilterByColors","props","dispatch","checkedState","setCheckedState","Array","listColors","length","fill","handleChangeInput","target","position","updatedCheckedState","map","item","index","console","log","inputChangeColor","value","color","name","id","event","backgroundColor","color_code"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,oBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,2BAA/B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAC5C,IAAIQ,KAAJ,CAAUJ,KAAK,CAACK,UAAN,CAAiBC,MAA3B,EAAmCC,IAAnC,CAAwC,KAAxC,CAD4C,CAAhD;;AAIA,QAAMC,iBAAiB,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC5C,UAAMC,mBAAmB,GAAGT,YAAY,CAACU,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KACzCA,KAAK,KAAKJ,QAAV,GAAqB,CAACG,IAAtB,GAA6BA,IADL,CAA5B;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCd,YAAnC;AACAC,IAAAA,eAAe,CAACQ,mBAAD,CAAf;AAGAV,IAAAA,QAAQ,CAACH,cAAc,CAACmB,gBAAf,CAAgCR,MAAM,CAACS,KAAvC,CAAD,CAAR;AACH,GATD;;AAWA,sBAAO;AAAA,4BACH;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAEQlB,KAAK,CAACK,UAAN,CAAiBC,MAAjB,GAA0B,CAA1B,IACAN,KAAK,CAACK,UAAN,CAAiBO,GAAjB,CAAqB,CAACO,KAAD,EAAQL,KAAR,kBAAmB;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA,+BACpC;AAAO,UAAA,SAAS,EAAC,yCAAjB;AAAA,kCACI;AACI,YAAA,IAAI,EAAEK,KAAK,CAACC,IADhB;AAEI,YAAA,KAAK,EAAED,KAAK,CAACE,EAFjB;AAGI,YAAA,QAAQ,EAAGC,KAAD,IAAWd,iBAAiB,CAACc,KAAK,CAACb,MAAP,EAAeK,KAAf,CAH1C;AAII,YAAA,SAAS,EAAC,QAJd;AAKI,YAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAM,YAAA,SAAS,EAAC,yCAAhB;AAA0D,YAAA,KAAK,EAAE;AAAES,cAAAA,eAAe,EAAG,GAAEJ,KAAK,CAACK,UAAW;AAAvC,aAAjE;AAAA,sBACKtB,YAAY,CAACY,KAAD,CAAZ,iBAAuB,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE;AAAEP,gBAAAA,IAAI,EAAE;AAAR,eAAd;AAAiC,cAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AAD5B;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADoC,SAAUY,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAxC;AAHR;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAqBH,CAtCD;;GAAMtB,c;UACeF,W;;;KADfE,c;AAuCN,eAAeA,cAAf","sourcesContent":["import { Check } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { productActions } from \"../../redux/product-slice\";\n\nconst FilterByColors = (props) => {\n    const dispatch = useDispatch();\n    const [checkedState, setCheckedState] = useState(\n        new Array(props.listColors.length).fill(false)\n    );\n\n    const handleChangeInput = (target, position) => {\n        const updatedCheckedState = checkedState.map((item, index) =>\n            index === position ? !item : item\n        );\n        console.log(\"updatedCheckedState\", checkedState)\n        setCheckedState(updatedCheckedState);\n\n\n        dispatch(productActions.inputChangeColor(target.value))\n    }\n\n    return <div>\n        <h2 className=\"font-semibold mb-4\">Colors</h2>\n        <div className=\"flex\">\n            {\n                props.listColors.length > 0 &&\n                props.listColors.map((color, index) => (<div key={color.id} className=\"mr-2\">\n                    <label className=\"inline-flex items-center cursor-pointer\">\n                        <input\n                            name={color.name}\n                            value={color.id}\n                            onChange={(event) => handleChangeInput(event.target, index)}\n                            className=\"hidden\"\n                            type=\"checkbox\" />\n                        <span className=\"w-8 h-8 text-center rounded-full border\" style={{ backgroundColor: `${color.color_code}` }}>\n                            {checkedState[index] && <Check style={{ fill: \"green\" }} size=\"small\" />}\n                        </span>\n                    </label>\n                </div>))\n            }\n        </div>\n    </div>\n}\nexport default FilterByColors;"]},"metadata":{},"sourceType":"module"}