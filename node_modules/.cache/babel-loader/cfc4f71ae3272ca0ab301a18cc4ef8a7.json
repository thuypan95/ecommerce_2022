{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalPrice: 0,\n    totalQty: 0,\n    note: ''\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingCartItemIndex = state.items.findIndex(item => item.colorId === newItem.colorId && item.sizeId === newItem.sizeId && item.id === newItem.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n\n      if (!existingCartItem) {\n        state.items.push({\n          imgUrl: newItem.images[0].url,\n          id: newItem.id,\n          price: newItem.price,\n          quantity: action.payload.quantity,\n          name: newItem.name,\n          color: action.payload.color ? action.payload.color : '',\n          colorId: action.payload.colorId,\n          sizeId: action.payload.sizeId,\n          size: action.payload.size ? action.payload.size : ''\n        });\n      } else {\n        // console.log(JSON.parse(JSON.stringify(varible)));\n        // existingCartItem.quantity++;\n        existingCartItem.quantity = existingCartItem.quantity + action.payload.quantity;\n      }\n\n      state.totalPrice = state.items.reduce((total, item) => {\n        return total + item.quantity * item.price;\n      }, 0);\n      state.totalQty = state.items.reduce((total, item) => {\n        return total + item.quantity;\n      }, 0);\n    },\n\n    removeItem(state, action) {\n      state.totalQty--;\n      const newItem = action.payload;\n      const existingCartItemIndex = state.items.findIndex(item => item.colorId === newItem.colorId && item.sizeId === newItem.sizeId && item.id === newItem.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n\n      if (existingCartItem.quantity === 1) {\n        state.items.splice(existingCartItemIndex, 1);\n      } else {\n        existingCartItem.quantity--;\n      }\n\n      state.totalPrice = state.items.reduce((total, item) => {\n        return total + item.quantity * item.price;\n      }, 0);\n    },\n\n    removeAllQtyItem(state, action) {\n      const newItem = action.payload;\n      const existingCartItemIndex = state.items.findIndex(item => item.colorId === newItem.colorId && item.sizeId === newItem.sizeId && item.id === newItem.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      state.totalQty -= existingCartItem.quantity;\n      existingCartItem.quantity = 0;\n      state.items.splice(existingCartItemIndex, 1);\n      state.totalPrice = state.items.reduce((total, item) => {\n        return total + item.quantity * item.price;\n      }, 0);\n    },\n\n    clearAll(state) {\n      state.items.length = 0;\n      state.totalPrice = 0;\n      state.totalQty = 0;\n    },\n\n    addNote(state, action) {\n      state.note = action.payload;\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/redux/cart-slice.js"],"names":["createSlice","current","cartSlice","name","initialState","items","totalPrice","totalQty","note","reducers","addItem","state","action","newItem","payload","existingCartItemIndex","findIndex","item","colorId","sizeId","id","existingCartItem","push","imgUrl","images","url","price","quantity","color","size","reduce","total","removeItem","splice","removeAllQtyItem","clearAll","length","addNote","cartActions","actions"],"mappings":"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","sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalPrice: 0,\n        totalQty: 0,\n        note: ''\n    },\n    reducers: {\n        addItem(state, action) {\n            const newItem = action.payload;\n            const existingCartItemIndex = state.items.findIndex(\n                (item) => item.colorId === newItem.colorId && item.sizeId === newItem.sizeId && item.id === newItem.id\n            );\n            const existingCartItem = state.items[existingCartItemIndex];\n            if (!existingCartItem) {\n                state.items.push({\n                    imgUrl: newItem.images[0].url,\n                    id: newItem.id,\n                    price: newItem.price,\n                    quantity: action.payload.quantity,\n                    name: newItem.name,\n                    color: action.payload.color ? action.payload.color : '',\n                    colorId: action.payload.colorId,\n                    sizeId: action.payload.sizeId,\n                    size: action.payload.size ? action.payload.size : ''\n                });\n            }\n            else {\n\n                // console.log(JSON.parse(JSON.stringify(varible)));\n                // existingCartItem.quantity++;\n                existingCartItem.quantity = existingCartItem.quantity + action.payload.quantity;\n            }\n\n            state.totalPrice = state.items.reduce((total, item) => {\n                return total + item.quantity * item.price;\n            }, 0);\n            state.totalQty = state.items.reduce((total, item) => {\n                return total + item.quantity;\n            }, 0);\n\n        },\n        removeItem(state, action) {\n            state.totalQty--;\n            const newItem = action.payload;\n            const existingCartItemIndex = state.items.findIndex(\n                (item) => item.colorId === newItem.colorId && item.sizeId === newItem.sizeId && item.id === newItem.id\n            );\n            const existingCartItem = state.items[existingCartItemIndex];\n            if (existingCartItem.quantity === 1) {\n                state.items.splice(existingCartItemIndex, 1);\n            }\n            else {\n                existingCartItem.quantity--;\n            }\n            state.totalPrice = state.items.reduce((total, item) => {\n                return total + item.quantity * item.price;\n            }, 0)\n\n        },\n        removeAllQtyItem(state, action) {\n            const newItem = action.payload;\n\n            const existingCartItemIndex = state.items.findIndex(\n                (item) => item.colorId === newItem.colorId && item.sizeId === newItem.sizeId && item.id === newItem.id\n            );\n            const existingCartItem = state.items[existingCartItemIndex];\n            state.totalQty -= existingCartItem.quantity;\n\n            existingCartItem.quantity = 0;\n            state.items.splice(existingCartItemIndex, 1);\n            state.totalPrice = state.items.reduce((total, item) => {\n                return total + item.quantity * item.price;\n            }, 0);\n        },\n        clearAll(state) {\n            state.items.length = 0;\n            state.totalPrice = 0;\n            state.totalQty = 0;\n        },\n        addNote(state, action) {\n            state.note = action.payload;\n        }\n    }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}