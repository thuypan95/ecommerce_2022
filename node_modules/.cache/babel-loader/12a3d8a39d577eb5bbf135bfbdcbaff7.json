{"ast":null,"code":"import { baseURL, domainCategory, domainProduct } from \"../api\";\nimport { productActions } from \"./product-slice\";\nimport { uiActions } from \"./ui-slice\";\nconst url = baseURL + domainProduct;\nexport const fetchProductDataByCategory = idCat => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(`${url}?categories=${idCat}`);\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      dispatch(uiActions.isLoadingFunc(true));\n      const dataFetch = await fetchData();\n      dispatch(productActions.listProductByCategory({\n        list: dataFetch\n      }));\n      dispatch(uiActions.isLoadingFunc(false));\n    } catch (error) {\n      dispatch(uiActions.isLoadingFunc(false));\n    }\n  };\n};\nexport const fetchCategory = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(baseURL + domainCategory);\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const dataFetch = await fetchData();\n      dispatch(productActions.listCategory({\n        list: dataFetch\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/redux/product-actions.js"],"names":["baseURL","domainCategory","domainProduct","productActions","uiActions","url","fetchProductDataByCategory","idCat","dispatch","fetchData","response","fetch","data","json","isLoadingFunc","dataFetch","listProductByCategory","list","error","fetchCategory","listCategory","console","log"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,cAAlB,EAAkCC,aAAlC,QAAuD,QAAvD;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,GAAG,GAAGL,OAAO,GAAGE,aAAtB;AACA,OAAO,MAAMI,0BAA0B,GAAIC,KAAD,IAAW;AACjD,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,GAAI,eAAcE,KAAM,EAA5B,CAA5B;AACA,YAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KAJD;;AAKA,QAAI;AACAJ,MAAAA,QAAQ,CAACJ,SAAS,CAACU,aAAV,CAAwB,IAAxB,CAAD,CAAR;AACA,YAAMC,SAAS,GAAG,MAAMN,SAAS,EAAjC;AACAD,MAAAA,QAAQ,CACJL,cAAc,CAACa,qBAAf,CAAqC;AACjCC,QAAAA,IAAI,EAAEF;AAD2B,OAArC,CADI,CAAR;AAKAP,MAAAA,QAAQ,CAACJ,SAAS,CAACU,aAAV,CAAwB,KAAxB,CAAD,CAAR;AAEH,KAVD,CAWA,OAAOI,KAAP,EAAc;AACVV,MAAAA,QAAQ,CAACJ,SAAS,CAACU,aAAV,CAAwB,KAAxB,CAAD,CAAR;AAEH;AACJ,GArBD;AAsBH,CAvBM;AAwBP,OAAO,MAAMK,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAOX,QAAP,IAAoB;AACvB,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,OAAO,GAAGC,cAAX,CAA5B;AACA,YAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KAJD;;AAKA,QAAI;AACA,YAAMG,SAAS,GAAG,MAAMN,SAAS,EAAjC;AACAD,MAAAA,QAAQ,CACJL,cAAc,CAACiB,YAAf,CAA4B;AACxBH,QAAAA,IAAI,EAAEF;AADkB,OAA5B,CADI,CAAR;AAKH,KAPD,CAQA,OAAOG,KAAP,EAAc;AACVG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;AACJ,GAjBD;AAkBH,CAnBM","sourcesContent":["import { baseURL, domainCategory, domainProduct } from \"../api\";\nimport { productActions } from \"./product-slice\";\nimport { uiActions } from \"./ui-slice\";\n\nconst url = baseURL + domainProduct\nexport const fetchProductDataByCategory = (idCat) => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const response = await fetch(`${url}?categories=${idCat}`);\n            const data = await response.json();\n            return data;\n        }\n        try {\n            dispatch(uiActions.isLoadingFunc(true));\n            const dataFetch = await fetchData();\n            dispatch(\n                productActions.listProductByCategory({\n                    list: dataFetch\n                })\n            )\n            dispatch(uiActions.isLoadingFunc(false));\n\n        }\n        catch (error) {\n            dispatch(uiActions.isLoadingFunc(false));\n\n        }\n    }\n}\nexport const fetchCategory = () => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const response = await fetch(baseURL + domainCategory);\n            const data = await response.json();\n            return data;\n        }\n        try {\n            const dataFetch = await fetchData();\n            dispatch(\n                productActions.listCategory({\n                    list: dataFetch\n                })\n            )\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}