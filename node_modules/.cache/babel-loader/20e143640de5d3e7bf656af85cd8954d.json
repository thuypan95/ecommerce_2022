{"ast":null,"code":"import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Swal from 'sweetalert2';\nimport { isMobile, isTablet, isDesktop } from 'react-device-detect';\nimport config from './config';\nimport { format as dateFormat } from 'date-fns';\nexport const Toast = {\n  success: title => {\n    return toast.success(title, {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  },\n  error: title => {\n    return toast.error(title, {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  }\n};\nexport const SwalDelete = callback => {\n  return Swal.fire({\n    title: 'Are you sure?',\n    text: \"You won't be able to revert this!\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes, delete it!'\n  }).then(result => {\n    if (result.isConfirmed) {\n      callback();\n      Swal.fire('Deleted!', 'Your item has been deleted.', 'success');\n    }\n  });\n};\n_c = SwalDelete;\nexport const SwalAlert = {\n  delete: callback => {\n    return Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        callback();\n        Swal.fire('Deleted!', 'Your item has been deleted.', 'success');\n      }\n    });\n  }\n};\nexport const checkDeviceType = () => {\n  let deviceType = config.isDesktop;\n  if (isMobile) deviceType = config.isMobile;\n  if (isTablet) deviceType = config.isTablet;\n  if (isDesktop) deviceType = config.isDesktop;\n  return deviceType;\n};\nexport const authHeader = () => {\n  const data = JSON.parse(localStorage.getItem('persist:root'));\n  const dataAuth = JSON.parse(data.auth);\n  const token = dataAuth.token;\n\n  if (token) {\n    return {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    };\n  } else {\n    return {};\n  }\n};\nexport const displayDateTime = date => {\n  return dateFormat(new Date(date), 'dd/MM/yyyy HH:mm:ss');\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SwalDelete\");","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/functions.js"],"names":["toast","Swal","isMobile","isTablet","isDesktop","config","format","dateFormat","Toast","success","title","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","SwalDelete","callback","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","SwalAlert","delete","checkDeviceType","deviceType","authHeader","data","JSON","parse","localStorage","getItem","dataAuth","auth","token","headers","displayDateTime","date","Date"],"mappings":"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","sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Swal from 'sweetalert2';\nimport { isMobile, isTablet, isDesktop } from 'react-device-detect';\nimport config from './config';\nimport { format as dateFormat } from 'date-fns';\n\n\nexport const Toast = {\n    success: (title) => {\n        return toast.success(title, {\n            position: \"top-right\",\n            autoClose: 1500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n    },\n    error: (title) => {\n        return toast.error(title, {\n            position: \"top-right\",\n            autoClose: 1500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n    }\n}\nexport const SwalDelete = (callback) => {\n    return Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n        if (result.isConfirmed) {\n            callback()\n\n            Swal.fire(\n                'Deleted!',\n                'Your item has been deleted.',\n                'success'\n            )\n        }\n    })\n}\nexport const SwalAlert = {\n    delete: (callback) => {\n        return Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                callback();\n\n                Swal.fire(\n                    'Deleted!',\n                    'Your item has been deleted.',\n                    'success'\n                )\n            }\n        })\n    }\n}\n\nexport const checkDeviceType = () => {\n    let deviceType = config.isDesktop;\n    if (isMobile)\n        deviceType = config.isMobile;\n    if (isTablet)\n        deviceType = config.isTablet;\n    if (isDesktop)\n        deviceType = config.isDesktop;\n    return deviceType\n\n};\nexport const authHeader = () => {\n    const data = JSON.parse(localStorage.getItem('persist:root'));\n    const dataAuth = JSON.parse(data.auth);\n    const token = dataAuth.token;\n\n    if (token) {\n        return {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        };\n\n    } else {\n        return {};\n    }\n}\nexport const displayDateTime = (date) => {\n    return dateFormat(new Date(date), 'dd/MM/yyyy HH:mm:ss');\n}"]},"metadata":{},"sourceType":"module"}