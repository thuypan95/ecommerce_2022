{"ast":null,"code":"var _jsxFileName = \"/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/Layout/Header/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ShoppingCartOutlined } from \"@material-ui/icons\";\nimport classes from './HeaderCartButton.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiActions } from '../../../redux/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isBump, setIsBump] = useState(false);\n  const cart = useSelector(state => state.cart);\n  const items = cart.items;\n  const countItem = cart.totalQty;\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n\n    setIsBump(true);\n    const timer = setTimeout(() => {\n      setIsBump(false);\n    }, 300);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [cart, items.length]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: () => dispatch(uiActions.toggleOpenDrawer('cart')),\n    children: [/*#__PURE__*/_jsxDEV(ShoppingCartOutlined, {\n      fontSize: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `font-light text-sm bg-gray-200 w-5 h-5 inline-block text-center rounded-full ${isBump ? classes.bump : ''}`,\n      children: [\" \", countItem]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n\n_s(HeaderCartButton, \"gdXpDRqO6pcixMOoy9Txq09o8Dw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/Layout/Header/HeaderCartButton.js"],"names":["React","useEffect","useState","ShoppingCartOutlined","classes","useDispatch","useSelector","uiActions","HeaderCartButton","dispatch","isBump","setIsBump","cart","state","items","countItem","totalQty","length","timer","setTimeout","clearTimeout","toggleOpenDrawer","bump"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,yBAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMU,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,KAAK,GAAGF,IAAI,CAACE,KAAnB;AACA,QAAMC,SAAS,GAAGH,IAAI,CAACI,QAAvB;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACpB;AACH;;AACDN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAMO,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BR,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KAFuB,EAErB,GAFqB,CAAxB;AAGA,WAAQ,MAAM;AACVS,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,CAACN,IAAD,EAAOE,KAAK,CAACG,MAAb,CAXM,CAAT;AAYA,sBAAO;AAAM,IAAA,OAAO,EAAE,MAAMR,QAAQ,CAACF,SAAS,CAACc,gBAAV,CAA2B,MAA3B,CAAD,CAA7B;AAAA,4BAEH,QAAC,oBAAD;AAAsB,MAAA,QAAQ,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAM,MAAA,SAAS,EAAG,gFAA+EX,MAAM,GAAGN,OAAO,CAACkB,IAAX,GAAkB,EAAG,EAA5H;AAAA,sBAAkIP,SAAlI;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CAzBD;;GAAMP,gB;UACeH,W,EAEJC,W;;;KAHXE,gB;AA0BN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ShoppingCartOutlined } from \"@material-ui/icons\";\nimport classes from './HeaderCartButton.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiActions } from '../../../redux/ui-slice';\n\nconst HeaderCartButton = () => {\n    const dispatch = useDispatch();\n    const [isBump, setIsBump] = useState(false);\n    const cart = useSelector(state => state.cart);\n    const items = cart.items;\n    const countItem = cart.totalQty;\n    useEffect(() => {\n        if (items.length === 0) {\n            return;\n        }\n        setIsBump(true);\n        const timer = setTimeout(() => {\n            setIsBump(false);\n        }, 300);\n        return (() => {\n            clearTimeout(timer);\n        })\n    }, [cart, items.length]);\n    return <span onClick={() => dispatch(uiActions.toggleOpenDrawer('cart'))}>\n\n        <ShoppingCartOutlined fontSize=\"large\" />\n        <span className={`font-light text-sm bg-gray-200 w-5 h-5 inline-block text-center rounded-full ${isBump ? classes.bump : ''}`} > {countItem}</span>\n    </span>\n\n\n}\nexport default HeaderCartButton;"]},"metadata":{},"sourceType":"module"}