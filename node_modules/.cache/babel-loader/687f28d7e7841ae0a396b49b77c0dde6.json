{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    list: [],\n    listCategory: [],\n    filterCat: [],\n    filterColor: [],\n    filterSize: [],\n    filterPriceStart: 0,\n    filterPriceEnd: 100000000000\n  },\n  reducers: {\n    listProductByCategory(state, action) {\n      state.list = action.payload.list;\n    },\n\n    listCategory(state, action) {\n      state.listCategory = action.payload.list;\n    },\n\n    inputChangeCategory(state, action) {\n      let selected = [...state.filterCat];\n      let find = selected.indexOf(action.payload);\n\n      if (find > -1) {\n        selected.splice(find, 1);\n      } else {\n        selected.push(action.payload);\n      }\n\n      state.filterCat = [...selected];\n    },\n\n    inputChangeColor(state, action) {\n      let selected = [...state.filterColor];\n      let find = selected.indexOf(action.payload);\n\n      if (find > -1) {\n        selected.splice(find, 1);\n      } else {\n        selected.push(action.payload);\n      }\n\n      state.filterColor = [...selected];\n    },\n\n    inputChangeSize(state, action) {\n      let selected = [...state.filterSize];\n      let find = selected.indexOf(action.payload);\n\n      if (find > -1) {\n        selected.splice(find, 1);\n      } else {\n        selected.push(action.payload);\n      }\n\n      state.filterSize = [...selected];\n    },\n\n    changePrice(state, action) {\n      state.filterPriceStart = action.payload.start;\n      state.filterPriceEnd = action.payload.end;\n    },\n\n    deleteFilter(state, action) {\n      state.filterCat.length = 0;\n      state.filterColor.length = 0;\n      state.filterSize.length = 0;\n      state.filterPriceStart = 0;\n      state.filterPriceEnd = 100000000000;\n    }\n\n  }\n});\nexport const productActions = productSlice.actions;\nexport default productSlice;","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/redux/product-slice.js"],"names":["createSlice","productSlice","name","initialState","list","listCategory","filterCat","filterColor","filterSize","filterPriceStart","filterPriceEnd","reducers","listProductByCategory","state","action","payload","inputChangeCategory","selected","find","indexOf","splice","push","inputChangeColor","inputChangeSize","changePrice","start","end","deleteFilter","length","productActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst productSlice = createSlice({\n    name: 'product',\n    initialState: {\n        list: [],\n        listCategory: [],\n        filterCat: [],\n        filterColor: [],\n        filterSize: [],\n        filterPriceStart: 0,\n        filterPriceEnd: 100000000000\n    },\n    reducers: {\n        listProductByCategory(state, action) {\n            state.list = action.payload.list;\n        },\n        listCategory(state, action) {\n            state.listCategory = action.payload.list;\n        },\n        inputChangeCategory(state, action) {\n            let selected = [...state.filterCat];\n            let find = selected.indexOf(action.payload)\n\n            if (find > -1) {\n                selected.splice(find, 1)\n            } else {\n                selected.push(action.payload);\n            }\n            state.filterCat = [...selected];\n\n        },\n        inputChangeColor(state, action) {\n            let selected = [...state.filterColor];\n            let find = selected.indexOf(action.payload)\n\n            if (find > -1) {\n                selected.splice(find, 1)\n            } else {\n                selected.push(action.payload);\n            }\n            state.filterColor = [...selected];\n        },\n        inputChangeSize(state, action) {\n            let selected = [...state.filterSize];\n            let find = selected.indexOf(action.payload)\n\n            if (find > -1) {\n                selected.splice(find, 1)\n            } else {\n                selected.push(action.payload);\n            }\n            state.filterSize = [...selected];\n        },\n        changePrice(state, action) {\n            state.filterPriceStart = action.payload.start;\n            state.filterPriceEnd = action.payload.end;\n\n\n        },\n        deleteFilter(state, action) {\n            state.filterCat.length = 0;\n            state.filterColor.length = 0;\n            state.filterSize.length = 0;\n            state.filterPriceStart = 0;\n            state.filterPriceEnd = 100000000000;\n        }\n    },\n});\n\nexport const productActions = productSlice.actions;\n\nexport default productSlice;\n"]},"metadata":{},"sourceType":"module"}