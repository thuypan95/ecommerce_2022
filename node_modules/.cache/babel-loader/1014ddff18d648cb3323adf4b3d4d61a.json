{"ast":null,"code":"import axios from \"axios\";\nimport { baseURL, domainAuth } from \".\";\nconst authApi = {\n  loginApi: (email, password) => {\n    return new Promise((resolve, reject) => {\n      axios.post(baseURL + domainAuth, {\n        identifier: email,\n        password: password\n      }).then(response => {\n        const data = response.data;\n        resolve({\n          id: data.user.id,\n          token: data.jwt,\n          username: data.user.username,\n          isLogin: true\n        });\n      }).catch(error => {\n        const message = error.response.data.message[0].messages[0].message; //  console.log(\"er\", error.response.data);\n\n        reject(message);\n      });\n    });\n  },\n  registerApi: (email, password) => {\n    let arr = email.split('@');\n    return new Promise((resolve, reject) => {\n      axios.post(`${baseURL + domainAuth}/register`, {\n        name: arr[0],\n        password: password,\n        email: email,\n        username: arr[0]\n      }).then(response => {\n        const data = response.data;\n        resolve(data);\n      }).catch(error => {\n        var _error$response, _error$response$data, _error$response$data$, _error$response$data$2;\n\n        const message = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.message[0]) === null || _error$response$data$ === void 0 ? void 0 : (_error$response$data$2 = _error$response$data$.messages[0]) === null || _error$response$data$2 === void 0 ? void 0 : _error$response$data$2.message; //  console.log(\"er\", error.response.data);\n\n        reject(message);\n      });\n    });\n  }\n};\nexport default authApi;","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/api/auth.js"],"names":["axios","baseURL","domainAuth","authApi","loginApi","email","password","Promise","resolve","reject","post","identifier","then","response","data","id","user","token","jwt","username","isLogin","catch","error","message","messages","registerApi","arr","split","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,GAApC;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCT,MAAAA,KAAK,CACAU,IADL,CACUT,OAAO,GAAGC,UADpB,EACgC;AACxBS,QAAAA,UAAU,EAAEN,KADY;AAExBC,QAAAA,QAAQ,EAAEA;AAFc,OADhC,EAKKM,IALL,CAKUC,QAAQ,IAAI;AACd,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAN,QAAAA,OAAO,CAAC;AACJO,UAAAA,EAAE,EAAED,IAAI,CAACE,IAAL,CAAUD,EADV;AAEJE,UAAAA,KAAK,EAAEH,IAAI,CAACI,GAFR;AAGJC,UAAAA,QAAQ,EAAEL,IAAI,CAACE,IAAL,CAAUG,QAHhB;AAIJC,UAAAA,OAAO,EAAE;AAJL,SAAD,CAAP;AAMH,OAbL,EAcKC,KAdL,CAcWC,KAAK,IAAI;AACZ,cAAMC,OAAO,GAAGD,KAAK,CAACT,QAAN,CAAeC,IAAf,CAAoBS,OAApB,CAA4B,CAA5B,EAA+BC,QAA/B,CAAwC,CAAxC,EAA2CD,OAA3D,CADY,CAEZ;;AACAd,QAAAA,MAAM,CAACc,OAAD,CAAN;AACH,OAlBL;AAmBH,KApBM,CAAP;AAqBH,GAvBW;AAwBZE,EAAAA,WAAW,EAAE,CAACpB,KAAD,EAAQC,QAAR,KAAqB;AAC9B,QAAIoB,GAAG,GAAGrB,KAAK,CAACsB,KAAN,CAAY,GAAZ,CAAV;AAEA,WAAO,IAAIpB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCT,MAAAA,KAAK,CAACU,IAAN,CAAY,GAAET,OAAO,GAAGC,UAAW,WAAnC,EAA+C;AAC3C0B,QAAAA,IAAI,EAAEF,GAAG,CAAC,CAAD,CADkC;AAE3CpB,QAAAA,QAAQ,EAAEA,QAFiC;AAG3CD,QAAAA,KAAK,EAAEA,KAHoC;AAI3Cc,QAAAA,QAAQ,EAAEO,GAAG,CAAC,CAAD;AAJ8B,OAA/C,EAMKd,IANL,CAMUC,QAAQ,IAAI;AACd,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAN,QAAAA,OAAO,CAACM,IAAD,CAAP;AACH,OATL,EAUKO,KAVL,CAUWC,KAAK,IAAI;AAAA;;AACZ,cAAMC,OAAO,GAAGD,KAAH,aAAGA,KAAH,0CAAGA,KAAK,CAAET,QAAV,4EAAG,gBAAiBC,IAApB,kFAAG,qBAAuBS,OAAvB,CAA+B,CAA/B,CAAH,oFAAG,sBAAmCC,QAAnC,CAA4C,CAA5C,CAAH,2DAAG,uBAAgDD,OAAhE,CADY,CAEZ;;AACAd,QAAAA,MAAM,CAACc,OAAD,CAAN;AACH,OAdL;AAeH,KAhBM,CAAP;AAiBH;AA5CW,CAAhB;AA8CA,eAAepB,OAAf","sourcesContent":["import axios from \"axios\";\nimport { baseURL, domainAuth } from \".\";\n\nconst authApi = {\n    loginApi: (email, password) => {\n        return new Promise((resolve, reject) => {\n            axios\n                .post(baseURL + domainAuth, {\n                    identifier: email,\n                    password: password,\n                })\n                .then(response => {\n                    const data = response.data;\n                    resolve({\n                        id: data.user.id,\n                        token: data.jwt,\n                        username: data.user.username,\n                        isLogin: true\n                    })\n                })\n                .catch(error => {\n                    const message = error.response.data.message[0].messages[0].message;\n                    //  console.log(\"er\", error.response.data);\n                    reject(message);\n                });\n        })\n    },\n    registerApi: (email, password) => {\n        let arr = email.split('@');\n\n        return new Promise((resolve, reject) => {\n            axios.post(`${baseURL + domainAuth}/register`, {\n                name: arr[0],\n                password: password,\n                email: email,\n                username: arr[0]\n            })\n                .then(response => {\n                    const data = response.data;\n                    resolve(data);\n                })\n                .catch(error => {\n                    const message = error?.response?.data?.message[0]?.messages[0]?.message;\n                    //  console.log(\"er\", error.response.data);\n                    reject(message);\n                });\n        })\n    }\n}\nexport default authApi;"]},"metadata":{},"sourceType":"module"}