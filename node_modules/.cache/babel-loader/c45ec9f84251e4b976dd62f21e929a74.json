{"ast":null,"code":"var _jsxFileName = \"/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/UI/DrawerUI.js\",\n    _s = $RefreshSig$();\n\nimport Drawer from \"rc-drawer\";\nimport 'rc-drawer/assets/index.css';\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport config from \"../../config\";\nimport { checkDeviceType } from \"../../functions\";\nimport { uiActions } from \"../../redux/ui-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DrawerUI = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const device = checkDeviceType();\n  const [width, setWidth] = useState(0);\n  useEffect(() => {\n    if (device === config.isMobile) {\n      setWidth(320);\n    } else {\n      setWidth(400);\n    }\n  }, [device]);\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    handler: false,\n    placement: props.typeDrawer === 'cart' ? \"right\" : \"left\",\n    level: null,\n    width: width,\n    open: props.isOpenDrawer,\n    onHandleClick: () => {\n      dispatch(uiActions.toggleOpenDrawer(props.typeDrawer));\n    },\n    onClose: () => {\n      dispatch(uiActions.toggleOpenDrawer(props.typeDrawer));\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s(DrawerUI, \"N6fdZ2sJCzmRudexLEByb6Q9P+s=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DrawerUI;\nexport default DrawerUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerUI\");","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/UI/DrawerUI.js"],"names":["Drawer","useEffect","useState","useDispatch","config","checkDeviceType","uiActions","DrawerUI","props","dispatch","device","width","setWidth","isMobile","typeDrawer","isOpenDrawer","toggleOpenDrawer","children"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,SAAT,QAA0B,sBAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGL,eAAe,EAA9B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,MAAM,KAAKN,MAAM,CAACS,QAAtB,EAAgC;AAC5BD,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KAFD,MAGK;AACDA,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACJ,GAPQ,EAON,CAACF,MAAD,CAPM,CAAT;AASA,sBAAO,QAAC,MAAD;AACH,IAAA,OAAO,EAAE,KADN;AAEH,IAAA,SAAS,EAAEF,KAAK,CAACM,UAAN,KAAqB,MAArB,GAA8B,OAA9B,GAAwC,MAFhD;AAGH,IAAA,KAAK,EAAE,IAHJ;AAIH,IAAA,KAAK,EAAEH,KAJJ;AAKH,IAAA,IAAI,EAAEH,KAAK,CAACO,YALT;AAMH,IAAA,aAAa,EAAE,MAAM;AAAEN,MAAAA,QAAQ,CAACH,SAAS,CAACU,gBAAV,CAA2BR,KAAK,CAACM,UAAjC,CAAD,CAAR;AAAwD,KAN5E;AAOH,IAAA,OAAO,EAAE,MAAM;AAAEL,MAAAA,QAAQ,CAACH,SAAS,CAACU,gBAAV,CAA2BR,KAAK,CAACM,UAAjC,CAAD,CAAR;AAAwD,KAPtE;AAAA,cAQFN,KAAK,CAACS;AARJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAUH,CAvBD;;GAAMV,Q;UACeJ,W;;;KADfI,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import Drawer from \"rc-drawer\";\nimport 'rc-drawer/assets/index.css';\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport config from \"../../config\";\nimport { checkDeviceType } from \"../../functions\";\nimport { uiActions } from \"../../redux/ui-slice\";\n\nconst DrawerUI = (props) => {\n    const dispatch = useDispatch();\n    const device = checkDeviceType();\n    const [width, setWidth] = useState(0);\n    useEffect(() => {\n        if (device === config.isMobile) {\n            setWidth(320)\n        }\n        else {\n            setWidth(400);\n        }\n    }, [device])\n\n    return <Drawer\n        handler={false}\n        placement={props.typeDrawer === 'cart' ? \"right\" : \"left\"}\n        level={null}\n        width={width}\n        open={props.isOpenDrawer}\n        onHandleClick={() => { dispatch(uiActions.toggleOpenDrawer(props.typeDrawer)) }}\n        onClose={() => { dispatch(uiActions.toggleOpenDrawer(props.typeDrawer)) }}>\n        {props.children}\n    </Drawer>\n}\nexport default DrawerUI;"]},"metadata":{},"sourceType":"module"}