{"ast":null,"code":"var _jsxFileName = \"/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/UI/Dropzone.js\",\n    _s = $RefreshSig$();\n\nimport { CloudUpload } from '@material-ui/icons';\nimport React, { useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropzone = props => {\n  _s();\n\n  const {\n    files,\n    setFiles\n  } = props;\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*,video/*',\n    maxFiles: 5,\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n  };\n  const thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n  };\n  const thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n  };\n  const img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  };\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: thumb,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: file.preview,\n        style: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), file.type === \"video/mp4\" && /*#__PURE__*/_jsxDEV(\"video\", {\n        width: \"320\",\n        height: \"240\",\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: file.preview,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n          src: file.preview,\n          type: \"video/ogg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone border border-dashed border-2 p-3.5 rounded-md text-center'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs\",\n        children: \"Drag and drop some images or video here, or click to select images or video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloudUpload, {\n        fontSize: \"large\",\n        style: {\n          fill: 'gray'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dropzone, \"YVRkFUcNtsx07iJr6yhmmTAwtok=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/UI/Dropzone.js"],"names":["CloudUpload","React","useEffect","useDropzone","Dropzone","props","files","setFiles","getRootProps","getInputProps","accept","maxFiles","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","thumbs","type","name","forEach","revokeObjectURL","className","fill"],"mappings":"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","sourcesContent":["import { CloudUpload } from '@material-ui/icons';\nimport React, { useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst Dropzone = (props) => {\n    const { files, setFiles } = props;\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: 'image/*,video/*',\n        maxFiles: 5,\n        onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })))\n        }\n    });\n    const thumbsContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16\n    };\n\n    const thumb = {\n        display: 'inline-flex',\n        borderRadius: 2,\n        border: '1px solid #eaeaea',\n        marginBottom: 8,\n        marginRight: 8,\n        width: 100,\n        height: 100,\n        padding: 4,\n        boxSizing: 'border-box'\n    };\n\n    const thumbInner = {\n        display: 'flex',\n        minWidth: 0,\n        overflow: 'hidden'\n    };\n\n    const img = {\n        display: 'block',\n        width: 'auto',\n        height: '100%'\n    };\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                <img\n                    alt=\"\"\n                    src={file.preview}\n                    style={img} />\n                {\n                    file.type === \"video/mp4\" && <video width=\"320\" height=\"240\" controls>\n                        <source src={file.preview} type=\"video/mp4\" />\n                        <source src={file.preview} type=\"video/ogg\" />\n                        Your browser does not support the video tag.\n                    </video>\n                }\n            </div>\n        </div>\n    ));\n\n    useEffect(() => () => {\n        // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n    return (\n        <section className=\"container\">\n            <div {...getRootProps({ className: 'dropzone border border-dashed border-2 p-3.5 rounded-md text-center' })}>\n                <input {...getInputProps()} />\n                <p className=\"text-xs\">Drag and drop some images or video here, or click to select images or video</p>\n                <CloudUpload fontSize=\"large\" style={{ fill: 'gray' }} />\n            </div>\n            <aside style={thumbsContainer}>\n                {thumbs}\n            </aside>\n        </section>\n    );\n}\n\nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}