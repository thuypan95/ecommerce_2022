{"ast":null,"code":"var _jsxFileName = \"/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/Register/FormRegister.js\",\n    _s = $RefreshSig$();\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { registration } from \"../../redux/auth-slice\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Password must match')\n});\n\nconst FormRegister = () => {\n  _s();\n\n  const {\n    handleSubmit,\n    trigger,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isLoading = useSelector(state => state.auth.loading);\n  const [error, setError] = useState('');\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n\n  const confirmHandler = async event => {\n    const result = await dispatch(registration(event));\n\n    if (result.error) {\n      if (result.error.message) {\n        setError(result.error.message);\n      }\n    } else {\n      history.push('/sign-in');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-2/4 mr-auto ml-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl tracking-wider\\t\",\n      children: \"REGISTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-4\",\n      onSubmit: handleSubmit(confirmHandler),\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-5 text-red-600 text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600\",\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"email\",\n          control: control,\n          defaultValue: \"\",\n          render: _ref => {\n            let {\n              field: {\n                value,\n                onChange,\n                ...field\n              }\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `border h-10 rounded-sm outline-none px-4 w-full mt-2 ${errors.email ? 'bg-red-50 border-red-500' : 'focus:border-green-600'}`,\n              ...field,\n              onChange: _ref2 => {\n                let {\n                  target: {\n                    value\n                  }\n                } = _ref2;\n                onChange(value);\n                trigger(\"email\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600 mt-2\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600\",\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"password\",\n          control: control,\n          defaultValue: \"\",\n          render: _ref3 => {\n            let {\n              field: {\n                value,\n                onChange,\n                ...field\n              }\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: `${showPass ? 'text' : 'password'}`,\n                className: `border h-10 rounded-sm outline-none px-4 w-full ${errors.password ? 'bg-red-50 border-red-500' : 'focus:border-green-600'}`,\n                ...field,\n                onChange: _ref4 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref4;\n                  onChange(value);\n                  trigger(\"password\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setShowPass(!showPass);\n                },\n                className: \"absolute right-1 top-1.5\",\n                type: \"button\",\n                children: showPass ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600 mt-2\",\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Confirm password \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600\",\n            children: \" *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"confirmPassword\",\n          control: control,\n          defaultValue: \"\",\n          render: _ref5 => {\n            let {\n              field: {\n                value,\n                onChange,\n                ...field\n              }\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: `${showConfirmPass ? 'text' : 'password'}`,\n                className: `border h-10 rounded-sm outline-none px-4 w-full ${errors.confirmPassword ? 'bg-red-50 border-red-500' : 'focus:border-green-600'}`,\n                ...field,\n                onChange: _ref6 => {\n                  let {\n                    target: {\n                      value\n                    }\n                  } = _ref6;\n                  onChange(value);\n                  trigger(\"confirmPassword\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setShowConfirmPass(!showConfirmPass);\n                },\n                className: \"absolute right-1 top-1.5\",\n                type: \"button\",\n                children: showConfirmPass ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 52\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 69\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600 mt-2\",\n          children: errors.confirmPassword.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-sm text-gray-500\",\n        children: [\"If you have an account, please \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-400 cursor-pointer hover:underline\",\n          onClick: () => {\n            history.push('/sign-in');\n          },\n          children: \"Sign in here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transition duration-500 ease-in-out hover:bg-white hover:text-black border-2 border-black bg-black py-2 px-10 text-white rounded-sm\",\n          type: \"button\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transition duration-500 ease-in-out hover:bg-white hover:text-black border-2 border-black bg-black py-2 px-10 text-white rounded-sm\",\n          type: \"submit\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n\n_s(FormRegister, \"XesPYJv9wVHPPotTD5h5LIVdGXs=\", false, function () {\n  return [useForm, useDispatch, useHistory, useSelector];\n});\n\n_c = FormRegister;\nexport default FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"sources":["/Users/vnng-it/Documents/projects/react-hook/client-project-shop/src/components/Register/FormRegister.js"],"names":["useForm","Controller","yupResolver","yup","useDispatch","useSelector","useState","useHistory","registration","Visibility","VisibilityOff","schema","object","shape","email","string","required","password","confirmPassword","oneOf","ref","FormRegister","handleSubmit","trigger","control","formState","errors","resolver","dispatch","history","isLoading","state","auth","loading","error","setError","showPass","setShowPass","showConfirmPass","setShowConfirmPass","confirmHandler","event","result","message","push","field","value","onChange","target"],"mappings":"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","sourcesContent":["\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { registration } from \"../../redux/auth-slice\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nconst schema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n    confirmPassword: yup.string()\n        .oneOf([yup.ref('password'), null], 'Password must match')\n});\nconst FormRegister = () => {\n    const { handleSubmit, trigger, control, formState: { errors } } = useForm({ resolver: yupResolver(schema) });\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const isLoading = useSelector(state => state.auth.loading);\n    const [error, setError] = useState('');\n    const [showPass, setShowPass] = useState(false);\n    const [showConfirmPass, setShowConfirmPass] = useState(false);\n\n\n\n    const confirmHandler = async (event) => {\n        const result = await dispatch(registration(event));\n        if (result.error) {\n            if (result.error.message) {\n                setError(result.error.message)\n            }\n        }\n        else {\n            history.push('/sign-in');\n        }\n    };\n\n    return <div className=\"w-2/4 mr-auto ml-auto\">\n        <h2 className=\"text-2xl tracking-wider\t\">REGISTER</h2>\n\n        <form className=\"mt-4\" onSubmit={handleSubmit(confirmHandler)}>\n            {error && <p className=\"my-5 text-red-600 text-center\">{error}</p>}\n            <div>\n                <label htmlFor='email'>Email <span className=\"text-red-600\"> *</span></label>\n                <Controller\n                    name=\"email\"\n                    control={control}\n                    defaultValue=\"\"\n                    render={({ field: { value, onChange, ...field } }) => (\n                        <input\n                            className={`border h-10 rounded-sm outline-none px-4 w-full mt-2 ${errors.email ? 'bg-red-50 border-red-500' : 'focus:border-green-600'}`}\n                            {...field}\n                            onChange={({ target: { value } }) => {\n                                onChange(value);\n                                trigger(\"email\")\n                            }}\n                        />\n                    )}\n                />\n                {\n                    errors.email && <p className=\"text-red-600 mt-2\">{errors.email.message}</p>\n                }\n            </div>\n            <div className=\"mt-5\">\n                <label htmlFor='password'>Password <span className=\"text-red-600\"> *</span></label>\n                <Controller\n                    name=\"password\"\n                    control={control}\n                    defaultValue=\"\"\n                    render={({ field: { value, onChange, ...field } }) => (\n                        <div className=\"relative mt-2\">\n                            <input\n                                type={`${showPass ? 'text' : 'password'}`}\n                                className={`border h-10 rounded-sm outline-none px-4 w-full ${errors.password ? 'bg-red-50 border-red-500' : 'focus:border-green-600'}`}\n                                {...field}\n                                onChange={({ target: { value } }) => {\n                                    onChange(value);\n                                    trigger(\"password\")\n                                }}\n                            />\n                            <button\n                                onClick={() => { setShowPass(!showPass) }}\n                                className=\"absolute right-1 top-1.5\" type=\"button\">\n                                {showPass ? <Visibility /> : <VisibilityOff />}\n                            </button>\n                        </div>\n                    )}\n                />\n                {\n                    errors.password && <p className=\"text-red-600 mt-2\">{errors.password.message}</p>\n                }\n            </div>\n            <div className=\"mt-5\">\n                <label htmlFor='password'>Confirm password <span className=\"text-red-600\"> *</span></label>\n                <Controller\n                    name=\"confirmPassword\"\n                    control={control}\n                    defaultValue=\"\"\n                    render={({ field: { value, onChange, ...field } }) => (\n                        <div className=\"relative mt-2\">\n                            <input\n                                type={`${showConfirmPass ? 'text' : 'password'}`}\n                                className={`border h-10 rounded-sm outline-none px-4 w-full ${errors.confirmPassword ? 'bg-red-50 border-red-500' : 'focus:border-green-600'}`}\n                                {...field}\n                                onChange={({ target: { value } }) => {\n                                    onChange(value);\n                                    trigger(\"confirmPassword\")\n                                }}\n                            />\n                            <button\n                                onClick={() => { setShowConfirmPass(!showConfirmPass) }}\n                                className=\"absolute right-1 top-1.5\" type=\"button\">\n                                {showConfirmPass ? <Visibility /> : <VisibilityOff />}\n                            </button>\n                        </div>\n                    )}\n                />\n                {\n                    errors.confirmPassword && <p className=\"text-red-600 mt-2\">{errors.confirmPassword.message}</p>\n                }\n            </div>\n            <p className=\"mt-4 text-sm text-gray-500\">If you have an account, please &nbsp;\n                <span className=\"text-blue-400 cursor-pointer hover:underline\"\n                    onClick={() => { history.push('/sign-in') }}>Sign in here</span>\n            </p>\n            <div className=\"mt-6\">\n                {\n                    isLoading ?\n                        <button\n                            className=\"transition duration-500 ease-in-out hover:bg-white hover:text-black border-2 border-black bg-black py-2 px-10 text-white rounded-sm\"\n                            type=\"button\">\n                            Loading...\n                        </button> :\n                        <button\n                            className=\"transition duration-500 ease-in-out hover:bg-white hover:text-black border-2 border-black bg-black py-2 px-10 text-white rounded-sm\"\n                            type=\"submit\">\n                            REGISTER\n                        </button>\n                }\n            </div>\n        </form>\n    </div>\n}\nexport default FormRegister;"]},"metadata":{},"sourceType":"module"}